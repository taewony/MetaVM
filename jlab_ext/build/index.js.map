{"version":3,"file":"index.js","mappings":"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","sources":["webpack://jupyterlab-meta-vm-extension/webpack/universalModuleDefinition","webpack://jupyterlab-meta-vm-extension/./node_modules/@jupyterlab/fileeditor/node_modules/@lumino/coreutils/dist/index.js","webpack://jupyterlab-meta-vm-extension/./node_modules/@jupyterlab/fileeditor/node_modules/@lumino/algorithm/dist/index.es6.js","webpack://jupyterlab-meta-vm-extension/webpack/bootstrap","webpack://jupyterlab-meta-vm-extension/webpack/runtime/define property getters","webpack://jupyterlab-meta-vm-extension/webpack/runtime/hasOwnProperty shorthand","webpack://jupyterlab-meta-vm-extension/webpack/runtime/make namespace object","webpack://jupyterlab-meta-vm-extension/./node_modules/@jupyterlab/fileeditor/lib/tokens.js","webpack://jupyterlab-meta-vm-extension/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@lumino/algorithm')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@lumino/algorithm'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.lumino_coreutils = {}, global.lumino_algorithm));\n})(this, (function (exports, algorithm) { 'use strict';\n\n    // Copyright (c) Jupyter Development Team.\n    // Distributed under the terms of the Modified BSD License.\n    /*-----------------------------------------------------------------------------\n    | Copyright (c) 2014-2017, PhosphorJS Contributors\n    |\n    | Distributed under the terms of the BSD 3-Clause License.\n    |\n    | The full license is in the file LICENSE, distributed with this software.\n    |----------------------------------------------------------------------------*/\n    /**\n     * The namespace for JSON-specific functions.\n     */\n    exports.JSONExt = void 0;\n    (function (JSONExt) {\n        /**\n         * A shared frozen empty JSONObject\n         */\n        JSONExt.emptyObject = Object.freeze({});\n        /**\n         * A shared frozen empty JSONArray\n         */\n        JSONExt.emptyArray = Object.freeze([]);\n        /**\n         * Test whether a JSON value is a primitive.\n         *\n         * @param value - The JSON value of interest.\n         *\n         * @returns `true` if the value is a primitive,`false` otherwise.\n         */\n        function isPrimitive(value) {\n            return (value === null ||\n                typeof value === 'boolean' ||\n                typeof value === 'number' ||\n                typeof value === 'string');\n        }\n        JSONExt.isPrimitive = isPrimitive;\n        function isArray(value) {\n            return Array.isArray(value);\n        }\n        JSONExt.isArray = isArray;\n        function isObject(value) {\n            return !isPrimitive(value) && !isArray(value);\n        }\n        JSONExt.isObject = isObject;\n        /**\n         * Compare two JSON values for deep equality.\n         *\n         * @param first - The first JSON value of interest.\n         *\n         * @param second - The second JSON value of interest.\n         *\n         * @returns `true` if the values are equivalent, `false` otherwise.\n         */\n        function deepEqual(first, second) {\n            // Check referential and primitive equality first.\n            if (first === second) {\n                return true;\n            }\n            // If one is a primitive, the `===` check ruled out the other.\n            if (isPrimitive(first) || isPrimitive(second)) {\n                return false;\n            }\n            // Test whether they are arrays.\n            let a1 = isArray(first);\n            let a2 = isArray(second);\n            // Bail if the types are different.\n            if (a1 !== a2) {\n                return false;\n            }\n            // If they are both arrays, compare them.\n            if (a1 && a2) {\n                return deepArrayEqual(first, second);\n            }\n            // At this point, they must both be objects.\n            return deepObjectEqual(first, second);\n        }\n        JSONExt.deepEqual = deepEqual;\n        /**\n         * Create a deep copy of a JSON value.\n         *\n         * @param value - The JSON value to copy.\n         *\n         * @returns A deep copy of the given JSON value.\n         */\n        function deepCopy(value) {\n            // Do nothing for primitive values.\n            if (isPrimitive(value)) {\n                return value;\n            }\n            // Deep copy an array.\n            if (isArray(value)) {\n                return deepArrayCopy(value);\n            }\n            // Deep copy an object.\n            return deepObjectCopy(value);\n        }\n        JSONExt.deepCopy = deepCopy;\n        /**\n         * Compare two JSON arrays for deep equality.\n         */\n        function deepArrayEqual(first, second) {\n            // Check referential equality first.\n            if (first === second) {\n                return true;\n            }\n            // Test the arrays for equal length.\n            if (first.length !== second.length) {\n                return false;\n            }\n            // Compare the values for equality.\n            for (let i = 0, n = first.length; i < n; ++i) {\n                if (!deepEqual(first[i], second[i])) {\n                    return false;\n                }\n            }\n            // At this point, the arrays are equal.\n            return true;\n        }\n        /**\n         * Compare two JSON objects for deep equality.\n         */\n        function deepObjectEqual(first, second) {\n            // Check referential equality first.\n            if (first === second) {\n                return true;\n            }\n            // Check for the first object's keys in the second object.\n            for (let key in first) {\n                if (first[key] !== undefined && !(key in second)) {\n                    return false;\n                }\n            }\n            // Check for the second object's keys in the first object.\n            for (let key in second) {\n                if (second[key] !== undefined && !(key in first)) {\n                    return false;\n                }\n            }\n            // Compare the values for equality.\n            for (let key in first) {\n                // Get the values.\n                let firstValue = first[key];\n                let secondValue = second[key];\n                // If both are undefined, ignore the key.\n                if (firstValue === undefined && secondValue === undefined) {\n                    continue;\n                }\n                // If only one value is undefined, the objects are not equal.\n                if (firstValue === undefined || secondValue === undefined) {\n                    return false;\n                }\n                // Compare the values.\n                if (!deepEqual(firstValue, secondValue)) {\n                    return false;\n                }\n            }\n            // At this point, the objects are equal.\n            return true;\n        }\n        /**\n         * Create a deep copy of a JSON array.\n         */\n        function deepArrayCopy(value) {\n            let result = new Array(value.length);\n            for (let i = 0, n = value.length; i < n; ++i) {\n                result[i] = deepCopy(value[i]);\n            }\n            return result;\n        }\n        /**\n         * Create a deep copy of a JSON object.\n         */\n        function deepObjectCopy(value) {\n            let result = {};\n            for (let key in value) {\n                // Ignore undefined values.\n                let subvalue = value[key];\n                if (subvalue === undefined) {\n                    continue;\n                }\n                result[key] = deepCopy(subvalue);\n            }\n            return result;\n        }\n    })(exports.JSONExt || (exports.JSONExt = {}));\n\n    // Copyright (c) Jupyter Development Team.\n    // Distributed under the terms of the Modified BSD License.\n    /*-----------------------------------------------------------------------------\n    | Copyright (c) 2014-2017, PhosphorJS Contributors\n    |\n    | Distributed under the terms of the BSD 3-Clause License.\n    |\n    | The full license is in the file LICENSE, distributed with this software.\n    |----------------------------------------------------------------------------*/\n    /**\n     * An object which stores MIME data for general application use.\n     *\n     * #### Notes\n     * This class does not attempt to enforce \"correctness\" of MIME types\n     * and their associated data. Since this class is designed to transfer\n     * arbitrary data and objects within the same application, it assumes\n     * that the user provides correct and accurate data.\n     */\n    class MimeData {\n        constructor() {\n            this._types = [];\n            this._values = [];\n        }\n        /**\n         * Get an array of the MIME types contained within the dataset.\n         *\n         * @returns A new array of the MIME types, in order of insertion.\n         */\n        types() {\n            return this._types.slice();\n        }\n        /**\n         * Test whether the dataset has an entry for the given type.\n         *\n         * @param mime - The MIME type of interest.\n         *\n         * @returns `true` if the dataset contains a value for the given\n         *   MIME type, `false` otherwise.\n         */\n        hasData(mime) {\n            return this._types.indexOf(mime) !== -1;\n        }\n        /**\n         * Get the data value for the given MIME type.\n         *\n         * @param mime - The MIME type of interest.\n         *\n         * @returns The value for the given MIME type, or `undefined` if\n         *   the dataset does not contain a value for the type.\n         */\n        getData(mime) {\n            let i = this._types.indexOf(mime);\n            return i !== -1 ? this._values[i] : undefined;\n        }\n        /**\n         * Set the data value for the given MIME type.\n         *\n         * @param mime - The MIME type of interest.\n         *\n         * @param data - The data value for the given MIME type.\n         *\n         * #### Notes\n         * This will overwrite any previous entry for the MIME type.\n         */\n        setData(mime, data) {\n            this.clearData(mime);\n            this._types.push(mime);\n            this._values.push(data);\n        }\n        /**\n         * Remove the data entry for the given MIME type.\n         *\n         * @param mime - The MIME type of interest.\n         *\n         * #### Notes\n         * This is a no-op if there is no entry for the given MIME type.\n         */\n        clearData(mime) {\n            let i = this._types.indexOf(mime);\n            if (i !== -1) {\n                this._types.splice(i, 1);\n                this._values.splice(i, 1);\n            }\n        }\n        /**\n         * Remove all data entries from the dataset.\n         */\n        clear() {\n            this._types.length = 0;\n            this._values.length = 0;\n        }\n    }\n\n    // Copyright (c) Jupyter Development Team.\n    // Distributed under the terms of the Modified BSD License.\n    /**\n     * Plugin registry.\n     */\n    class PluginRegistry {\n        constructor(options = {}) {\n            this._application = null;\n            this._validatePlugin = () => true;\n            this._plugins = new Map();\n            this._services = new Map();\n            if (options.validatePlugin) {\n                console.info('Plugins may be rejected by the custom validation plugin method.');\n                this._validatePlugin = options.validatePlugin;\n            }\n        }\n        /**\n         * The application object.\n         *\n         * It will be provided as first argument to the\n         * plugins activation and deactivation functions.\n         *\n         * It can only be set once.\n         *\n         * By default, it is `null`.\n         */\n        get application() {\n            return this._application;\n        }\n        set application(v) {\n            if (this._application !== null) {\n                throw Error('PluginRegistry.application is already set. It cannot be overridden.');\n            }\n            this._application = v;\n        }\n        /**\n         * The list of all the deferred plugins.\n         */\n        get deferredPlugins() {\n            return Array.from(this._plugins)\n                .filter(([id, plugin]) => plugin.autoStart === 'defer')\n                .map(([id, plugin]) => id);\n        }\n        /**\n         * Get a plugin description.\n         *\n         * @param id - The ID of the plugin of interest.\n         *\n         * @returns The plugin description.\n         */\n        getPluginDescription(id) {\n            var _a, _b;\n            return (_b = (_a = this._plugins.get(id)) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : '';\n        }\n        /**\n         * Test whether a plugin is registered with the application.\n         *\n         * @param id - The ID of the plugin of interest.\n         *\n         * @returns `true` if the plugin is registered, `false` otherwise.\n         */\n        hasPlugin(id) {\n            return this._plugins.has(id);\n        }\n        /**\n         * Test whether a plugin is activated with the application.\n         *\n         * @param id - The ID of the plugin of interest.\n         *\n         * @returns `true` if the plugin is activated, `false` otherwise.\n         */\n        isPluginActivated(id) {\n            var _a, _b;\n            return (_b = (_a = this._plugins.get(id)) === null || _a === void 0 ? void 0 : _a.activated) !== null && _b !== void 0 ? _b : false;\n        }\n        /**\n         * List the IDs of the plugins registered with the application.\n         *\n         * @returns A new array of the registered plugin IDs.\n         */\n        listPlugins() {\n            return Array.from(this._plugins.keys());\n        }\n        /**\n         * Register a plugin with the application.\n         *\n         * @param plugin - The plugin to register.\n         *\n         * #### Notes\n         * An error will be thrown if a plugin with the same ID is already\n         * registered, or if the plugin has a circular dependency.\n         *\n         * If the plugin provides a service which has already been provided\n         * by another plugin, the new service will override the old service.\n         */\n        registerPlugin(plugin) {\n            // Throw an error if the plugin ID is already registered.\n            if (this._plugins.has(plugin.id)) {\n                throw new TypeError(`Plugin '${plugin.id}' is already registered.`);\n            }\n            if (!this._validatePlugin(plugin)) {\n                throw new Error(`Plugin '${plugin.id}' is not valid.`);\n            }\n            // Create the normalized plugin data.\n            const data = Private.createPluginData(plugin);\n            // Ensure the plugin does not cause a cyclic dependency.\n            Private.ensureNoCycle(data, this._plugins, this._services);\n            // Add the service token to the service map.\n            if (data.provides) {\n                this._services.set(data.provides, data.id);\n            }\n            // Add the plugin to the plugin map.\n            this._plugins.set(data.id, data);\n        }\n        /**\n         * Register multiple plugins with the application.\n         *\n         * @param plugins - The plugins to register.\n         *\n         * #### Notes\n         * This calls `registerPlugin()` for each of the given plugins.\n         */\n        registerPlugins(plugins) {\n            for (const plugin of plugins) {\n                this.registerPlugin(plugin);\n            }\n        }\n        /**\n         * Deregister a plugin with the application.\n         *\n         * @param id - The ID of the plugin of interest.\n         *\n         * @param force - Whether to deregister the plugin even if it is active.\n         */\n        deregisterPlugin(id, force) {\n            const plugin = this._plugins.get(id);\n            if (!plugin) {\n                return;\n            }\n            if (plugin.activated && !force) {\n                throw new Error(`Plugin '${id}' is still active.`);\n            }\n            this._plugins.delete(id);\n        }\n        /**\n         * Activate the plugin with the given ID.\n         *\n         * @param id - The ID of the plugin of interest.\n         *\n         * @returns A promise which resolves when the plugin is activated\n         *   or rejects with an error if it cannot be activated.\n         */\n        async activatePlugin(id) {\n            // Reject the promise if the plugin is not registered.\n            const plugin = this._plugins.get(id);\n            if (!plugin) {\n                throw new ReferenceError(`Plugin '${id}' is not registered.`);\n            }\n            // Resolve immediately if the plugin is already activated.\n            if (plugin.activated) {\n                return;\n            }\n            // Return the pending resolver promise if it exists.\n            if (plugin.promise) {\n                return plugin.promise;\n            }\n            // Resolve the required services for the plugin.\n            const required = plugin.requires.map(t => this.resolveRequiredService(t));\n            // Resolve the optional services for the plugin.\n            const optional = plugin.optional.map(t => this.resolveOptionalService(t));\n            // Setup the resolver promise for the plugin.\n            plugin.promise = Promise.all([...required, ...optional])\n                .then(services => plugin.activate.apply(undefined, [this.application, ...services]))\n                .then(service => {\n                plugin.service = service;\n                plugin.activated = true;\n                plugin.promise = null;\n            })\n                .catch(error => {\n                plugin.promise = null;\n                throw error;\n            });\n            // Return the pending resolver promise.\n            return plugin.promise;\n        }\n        /**\n         * Activate all the deferred plugins.\n         *\n         * @returns A promise which will resolve when each plugin is activated\n         * or rejects with an error if one cannot be activated.\n         */\n        async activatePlugins(kind, options = {}) {\n            switch (kind) {\n                case 'defer': {\n                    const promises = this.deferredPlugins\n                        .filter(pluginId => this._plugins.get(pluginId).autoStart)\n                        .map(pluginId => {\n                        return this.activatePlugin(pluginId);\n                    });\n                    await Promise.all(promises);\n                    break;\n                }\n                case 'startUp': {\n                    // Collect the ids of the startup plugins.\n                    const startups = Private.collectStartupPlugins(this._plugins, options);\n                    // Generate the activation promises.\n                    const promises = startups.map(async (id) => {\n                        try {\n                            return await this.activatePlugin(id);\n                        }\n                        catch (error) {\n                            console.error(`Plugin '${id}' failed to activate.`, error);\n                        }\n                    });\n                    await Promise.all(promises);\n                    break;\n                }\n            }\n        }\n        /**\n         * Deactivate the plugin and its downstream dependents if and only if the\n         * plugin and its dependents all support `deactivate`.\n         *\n         * @param id - The ID of the plugin of interest.\n         *\n         * @returns A list of IDs of downstream plugins deactivated with this one.\n         */\n        async deactivatePlugin(id) {\n            // Reject the promise if the plugin is not registered.\n            const plugin = this._plugins.get(id);\n            if (!plugin) {\n                throw new ReferenceError(`Plugin '${id}' is not registered.`);\n            }\n            // Bail early if the plugin is not activated.\n            if (!plugin.activated) {\n                return [];\n            }\n            // Check that this plugin can deactivate.\n            if (!plugin.deactivate) {\n                throw new TypeError(`Plugin '${id}'#deactivate() method missing`);\n            }\n            // Find the optimal deactivation order for plugins downstream of this one.\n            const manifest = Private.findDependents(id, this._plugins, this._services);\n            const downstream = manifest.map(id => this._plugins.get(id));\n            // Check that all downstream plugins can deactivate.\n            for (const plugin of downstream) {\n                if (!plugin.deactivate) {\n                    throw new TypeError(`Plugin ${plugin.id}#deactivate() method missing (depends on ${id})`);\n                }\n            }\n            // Deactivate all downstream plugins.\n            for (const plugin of downstream) {\n                const services = [...plugin.requires, ...plugin.optional].map(service => {\n                    const id = this._services.get(service);\n                    return id ? this._plugins.get(id).service : null;\n                });\n                // Await deactivation so the next plugins only receive active services.\n                await plugin.deactivate(this.application, ...services);\n                plugin.service = null;\n                plugin.activated = false;\n            }\n            // Remove plugin ID and return manifest of deactivated plugins.\n            manifest.pop();\n            return manifest;\n        }\n        /**\n         * Resolve a required service of a given type.\n         *\n         * @param token - The token for the service type of interest.\n         *\n         * @returns A promise which resolves to an instance of the requested\n         *   service, or rejects with an error if it cannot be resolved.\n         *\n         * #### Notes\n         * Services are singletons. The same instance will be returned each\n         * time a given service token is resolved.\n         *\n         * If the plugin which provides the service has not been activated,\n         * resolving the service will automatically activate the plugin.\n         *\n         * User code will not typically call this method directly. Instead,\n         * the required services for the user's plugins will be resolved\n         * automatically when the plugin is activated.\n         */\n        async resolveRequiredService(token) {\n            // Reject the promise if there is no provider for the type.\n            const id = this._services.get(token);\n            if (!id) {\n                throw new TypeError(`No provider for: ${token.name}.`);\n            }\n            // Activate the plugin if necessary.\n            const plugin = this._plugins.get(id);\n            if (!plugin.activated) {\n                await this.activatePlugin(id);\n            }\n            return plugin.service;\n        }\n        /**\n         * Resolve an optional service of a given type.\n         *\n         * @param token - The token for the service type of interest.\n         *\n         * @returns A promise which resolves to an instance of the requested\n         *   service, or `null` if it cannot be resolved.\n         *\n         * #### Notes\n         * Services are singletons. The same instance will be returned each\n         * time a given service token is resolved.\n         *\n         * If the plugin which provides the service has not been activated,\n         * resolving the service will automatically activate the plugin.\n         *\n         * User code will not typically call this method directly. Instead,\n         * the optional services for the user's plugins will be resolved\n         * automatically when the plugin is activated.\n         */\n        async resolveOptionalService(token) {\n            // Resolve with `null` if there is no provider for the type.\n            const id = this._services.get(token);\n            if (!id) {\n                return null;\n            }\n            // Activate the plugin if necessary.\n            const plugin = this._plugins.get(id);\n            if (!plugin.activated) {\n                try {\n                    await this.activatePlugin(id);\n                }\n                catch (reason) {\n                    console.error(reason);\n                    return null;\n                }\n            }\n            return plugin.service;\n        }\n    }\n    /**\n     * The namespace for the module implementation details.\n     */\n    var Private;\n    (function (Private) {\n        class PluginData {\n            constructor(plugin) {\n                var _a, _b, _c, _d;\n                this._activated = false;\n                this._promise = null;\n                this._service = null;\n                this.id = plugin.id;\n                this.description = (_a = plugin.description) !== null && _a !== void 0 ? _a : '';\n                this.activate = plugin.activate;\n                this.deactivate = (_b = plugin.deactivate) !== null && _b !== void 0 ? _b : null;\n                this.provides = (_c = plugin.provides) !== null && _c !== void 0 ? _c : null;\n                this.autoStart = (_d = plugin.autoStart) !== null && _d !== void 0 ? _d : false;\n                this.requires = plugin.requires ? plugin.requires.slice() : [];\n                this.optional = plugin.optional ? plugin.optional.slice() : [];\n            }\n            /**\n             * Whether the plugin has been activated.\n             */\n            get activated() {\n                return this._activated;\n            }\n            set activated(a) {\n                this._activated = a;\n            }\n            /**\n             * The resolved service for the plugin, or `null`.\n             */\n            get service() {\n                return this._service;\n            }\n            set service(s) {\n                this._service = s;\n            }\n            /**\n             * The pending resolver promise, or `null`.\n             */\n            get promise() {\n                return this._promise;\n            }\n            set promise(p) {\n                this._promise = p;\n            }\n        }\n        /**\n         * Create a normalized plugin data object for the given plugin.\n         */\n        function createPluginData(plugin) {\n            return new PluginData(plugin);\n        }\n        Private.createPluginData = createPluginData;\n        /**\n         * Ensure no cycle is present in the plugin resolution graph.\n         *\n         * If a cycle is detected, an error will be thrown.\n         */\n        function ensureNoCycle(plugin, plugins, services) {\n            const dependencies = [...plugin.requires, ...plugin.optional];\n            const visit = (token) => {\n                if (token === plugin.provides) {\n                    return true;\n                }\n                const id = services.get(token);\n                if (!id) {\n                    return false;\n                }\n                const visited = plugins.get(id);\n                const dependencies = [...visited.requires, ...visited.optional];\n                if (dependencies.length === 0) {\n                    return false;\n                }\n                trace.push(id);\n                if (dependencies.some(visit)) {\n                    return true;\n                }\n                trace.pop();\n                return false;\n            };\n            // Bail early if there cannot be a cycle.\n            if (!plugin.provides || dependencies.length === 0) {\n                return;\n            }\n            // Setup a stack to trace service resolution.\n            const trace = [plugin.id];\n            // Throw an exception if a cycle is present.\n            if (dependencies.some(visit)) {\n                throw new ReferenceError(`Cycle detected: ${trace.join(' -> ')}.`);\n            }\n        }\n        Private.ensureNoCycle = ensureNoCycle;\n        /**\n         * Find dependents in deactivation order.\n         *\n         * @param id - The ID of the plugin of interest.\n         *\n         * @param plugins - The map containing all plugins.\n         *\n         * @param services - The map containing all services.\n         *\n         * @returns A list of dependent plugin IDs in order of deactivation\n         *\n         * #### Notes\n         * The final item of the returned list is always the plugin of interest.\n         */\n        function findDependents(id, plugins, services) {\n            const edges = new Array();\n            const add = (id) => {\n                const plugin = plugins.get(id);\n                // FIXME In the case of missing optional dependencies, we may consider\n                // deactivating and reactivating the plugin without the missing service.\n                const dependencies = [...plugin.requires, ...plugin.optional];\n                edges.push(...dependencies.reduce((acc, dep) => {\n                    const service = services.get(dep);\n                    if (service) {\n                        // An edge is oriented from dependent to provider.\n                        acc.push([id, service]);\n                    }\n                    return acc;\n                }, []));\n            };\n            for (const id of plugins.keys()) {\n                add(id);\n            }\n            // Filter edges\n            // - Get all packages that dependent on the package to be deactivated\n            const newEdges = edges.filter(edge => edge[1] === id);\n            let oldSize = 0;\n            while (newEdges.length > oldSize) {\n                const previousSize = newEdges.length;\n                // Get all packages that dependent on packages that will be deactivated\n                const packagesOfInterest = new Set(newEdges.map(edge => edge[0]));\n                for (const poi of packagesOfInterest) {\n                    edges\n                        .filter(edge => edge[1] === poi)\n                        .forEach(edge => {\n                        // We check it is not already included to deal with circular dependencies\n                        if (!newEdges.includes(edge)) {\n                            newEdges.push(edge);\n                        }\n                    });\n                }\n                oldSize = previousSize;\n            }\n            const sorted = algorithm.topologicSort(newEdges);\n            const index = sorted.findIndex(candidate => candidate === id);\n            if (index === -1) {\n                return [id];\n            }\n            return sorted.slice(0, index + 1);\n        }\n        Private.findDependents = findDependents;\n        /**\n         * Collect the IDs of the plugins to activate on startup.\n         */\n        function collectStartupPlugins(plugins, options) {\n            // Create a set to hold the plugin IDs.\n            const collection = new Set();\n            // Collect the auto-start (non deferred) plugins.\n            for (const id of plugins.keys()) {\n                if (plugins.get(id).autoStart === true) {\n                    collection.add(id);\n                }\n            }\n            // Add the startup plugins.\n            if (options.startPlugins) {\n                for (const id of options.startPlugins) {\n                    collection.add(id);\n                }\n            }\n            // Remove the ignored plugins.\n            if (options.ignorePlugins) {\n                for (const id of options.ignorePlugins) {\n                    collection.delete(id);\n                }\n            }\n            // Return the collected startup plugins.\n            return Array.from(collection);\n        }\n        Private.collectStartupPlugins = collectStartupPlugins;\n    })(Private || (Private = {}));\n\n    // Copyright (c) Jupyter Development Team.\n    // Distributed under the terms of the Modified BSD License.\n    /*-----------------------------------------------------------------------------\n    | Copyright (c) 2014-2017, PhosphorJS Contributors\n    |\n    | Distributed under the terms of the BSD 3-Clause License.\n    |\n    | The full license is in the file LICENSE, distributed with this software.\n    |----------------------------------------------------------------------------*/\n    /**\n     * A class which wraps a promise into a delegate object.\n     *\n     * #### Notes\n     * This class is useful when the logic to resolve or reject a promise\n     * cannot be defined at the point where the promise is created.\n     */\n    class PromiseDelegate {\n        /**\n         * Construct a new promise delegate.\n         */\n        constructor() {\n            this.promise = new Promise((resolve, reject) => {\n                this._resolve = resolve;\n                this._reject = reject;\n            });\n        }\n        /**\n         * Resolve the wrapped promise with the given value.\n         *\n         * @param value - The value to use for resolving the promise.\n         */\n        resolve(value) {\n            let resolve = this._resolve;\n            resolve(value);\n        }\n        /**\n         * Reject the wrapped promise with the given value.\n         *\n         * @reason - The reason for rejecting the promise.\n         */\n        reject(reason) {\n            let reject = this._reject;\n            reject(reason);\n        }\n    }\n\n    // Copyright (c) Jupyter Development Team.\n    // Distributed under the terms of the Modified BSD License.\n    /*-----------------------------------------------------------------------------\n    | Copyright (c) 2014-2017, PhosphorJS Contributors\n    |\n    | Distributed under the terms of the BSD 3-Clause License.\n    |\n    | The full license is in the file LICENSE, distributed with this software.\n    |----------------------------------------------------------------------------*/\n    /**\n     * A runtime object which captures compile-time type information.\n     *\n     * #### Notes\n     * A token captures the compile-time type of an interface or class in\n     * an object which can be used at runtime in a type-safe fashion.\n     */\n    class Token {\n        /**\n         * Construct a new token.\n         *\n         * @param name - A human readable name for the token.\n         * @param description - Token purpose description for documentation.\n         */\n        constructor(name, description) {\n            this.name = name;\n            this.description = description !== null && description !== void 0 ? description : '';\n            this._tokenStructuralPropertyT = null;\n        }\n    }\n\n    // Copyright (c) Jupyter Development Team.\n    // Distributed under the terms of the Modified BSD License.\n    /*-----------------------------------------------------------------------------\n    | Copyright (c) 2014-2017, PhosphorJS Contributors\n    |\n    | Distributed under the terms of the BSD 3-Clause License.\n    |\n    | The full license is in the file LICENSE, distributed with this software.\n    |----------------------------------------------------------------------------*/\n    // Fallback\n    function fallbackRandomValues(buffer) {\n        let value = 0;\n        for (let i = 0, n = buffer.length; i < n; ++i) {\n            if (i % 4 === 0) {\n                value = (Math.random() * 0xffffffff) >>> 0;\n            }\n            buffer[i] = value & 0xff;\n            value >>>= 8;\n        }\n    }\n\n    // Copyright (c) Jupyter Development Team.\n    // Distributed under the terms of the Modified BSD License.\n    /*-----------------------------------------------------------------------------\n    | Copyright (c) 2014-2017, PhosphorJS Contributors\n    |\n    | Distributed under the terms of the BSD 3-Clause License.\n    |\n    | The full license is in the file LICENSE, distributed with this software.\n    |----------------------------------------------------------------------------*/\n    /**\n     * The namespace for random number related functionality.\n     */\n    exports.Random = void 0;\n    (function (Random) {\n        /**\n         * A function which generates random bytes.\n         *\n         * @param buffer - The `Uint8Array` to fill with random bytes.\n         *\n         * #### Notes\n         * A cryptographically strong random number generator will be used if\n         * available. Otherwise, `Math.random` will be used as a fallback for\n         * randomness.\n         *\n         * The following RNGs are supported, listed in order of precedence:\n         *   - `window.crypto.getRandomValues`\n         *   - `window.msCrypto.getRandomValues`\n         *   - `require('crypto').randomFillSync\n         *   - `require('crypto').randomBytes\n         *   - `Math.random`\n         */\n        Random.getRandomValues = (() => {\n            // Look up the crypto module if available.\n            const crypto = (typeof window !== 'undefined' && (window.crypto || window.msCrypto)) ||\n                null;\n            // Modern browsers and IE 11\n            if (crypto && typeof crypto.getRandomValues === 'function') {\n                return function getRandomValues(buffer) {\n                    return crypto.getRandomValues(buffer);\n                };\n            }\n            // Fallback\n            return fallbackRandomValues;\n        })();\n    })(exports.Random || (exports.Random = {}));\n\n    // Copyright (c) Jupyter Development Team.\n    // Distributed under the terms of the Modified BSD License.\n    /*-----------------------------------------------------------------------------\n    | Copyright (c) 2014-2017, PhosphorJS Contributors\n    |\n    | Distributed under the terms of the BSD 3-Clause License.\n    |\n    | The full license is in the file LICENSE, distributed with this software.\n    |----------------------------------------------------------------------------*/\n    /**\n     * A function which creates a function that generates UUID v4 identifiers.\n     *\n     * @returns A new function that creates a UUID v4 string.\n     *\n     * #### Notes\n     * This implementation complies with RFC 4122.\n     *\n     * This uses `Random.getRandomValues()` for random bytes, which in\n     * turn will use the underlying `crypto` module of the platform if\n     * it is available. The fallback for randomness is `Math.random`.\n     */\n    function uuid4Factory(getRandomValues) {\n        // Create a 16 byte array to hold the random values.\n        const bytes = new Uint8Array(16);\n        // Create a look up table from bytes to hex strings.\n        const lut = new Array(256);\n        // Pad the single character hex digits with a leading zero.\n        for (let i = 0; i < 16; ++i) {\n            lut[i] = '0' + i.toString(16);\n        }\n        // Populate the rest of the hex digits.\n        for (let i = 16; i < 256; ++i) {\n            lut[i] = i.toString(16);\n        }\n        // Return a function which generates the UUID.\n        return function uuid4() {\n            // Get a new batch of random values.\n            getRandomValues(bytes);\n            // Set the UUID version number to 4.\n            bytes[6] = 0x40 | (bytes[6] & 0x0f);\n            // Set the clock sequence bit to the RFC spec.\n            bytes[8] = 0x80 | (bytes[8] & 0x3f);\n            // Assemble the UUID string.\n            return (lut[bytes[0]] +\n                lut[bytes[1]] +\n                lut[bytes[2]] +\n                lut[bytes[3]] +\n                '-' +\n                lut[bytes[4]] +\n                lut[bytes[5]] +\n                '-' +\n                lut[bytes[6]] +\n                lut[bytes[7]] +\n                '-' +\n                lut[bytes[8]] +\n                lut[bytes[9]] +\n                '-' +\n                lut[bytes[10]] +\n                lut[bytes[11]] +\n                lut[bytes[12]] +\n                lut[bytes[13]] +\n                lut[bytes[14]] +\n                lut[bytes[15]]);\n        };\n    }\n\n    // Copyright (c) Jupyter Development Team.\n    // Distributed under the terms of the Modified BSD License.\n    /*-----------------------------------------------------------------------------\n    | Copyright (c) 2014-2017, PhosphorJS Contributors\n    |\n    | Distributed under the terms of the BSD 3-Clause License.\n    |\n    | The full license is in the file LICENSE, distributed with this software.\n    |----------------------------------------------------------------------------*/\n    /**\n     * The namespace for UUID related functionality.\n     */\n    exports.UUID = void 0;\n    (function (UUID) {\n        /**\n         * A function which generates UUID v4 identifiers.\n         *\n         * @returns A new UUID v4 string.\n         *\n         * #### Notes\n         * This implementation complies with RFC 4122.\n         *\n         * This uses `Random.getRandomValues()` for random bytes, which in\n         * turn will use the underlying `crypto` module of the platform if\n         * it is available. The fallback for randomness is `Math.random`.\n         */\n        UUID.uuid4 = uuid4Factory(exports.Random.getRandomValues);\n    })(exports.UUID || (exports.UUID = {}));\n\n    exports.MimeData = MimeData;\n    exports.PluginRegistry = PluginRegistry;\n    exports.PromiseDelegate = PromiseDelegate;\n    exports.Token = Token;\n\n}));\n//# sourceMappingURL=index.js.map\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * The namespace for array-specific algorithms.\n */\nvar ArrayExt;\n(function (ArrayExt) {\n    /**\n     * Find the index of the first occurrence of a value in an array.\n     *\n     * @param array - The array-like object to search.\n     *\n     * @param value - The value to locate in the array. Values are\n     *   compared using strict `===` equality.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The index of the first occurrence of the value, or `-1`\n     *   if the value is not found.\n     *\n     * #### Notes\n     * If `stop < start` the search will wrap at the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `start` or `stop` which is non-integral.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = ['one', 'two', 'three', 'four', 'one'];\n     * ArrayExt.firstIndexOf(data, 'red');        // -1\n     * ArrayExt.firstIndexOf(data, 'one');        // 0\n     * ArrayExt.firstIndexOf(data, 'one', 1);     // 4\n     * ArrayExt.firstIndexOf(data, 'two', 2);     // -1\n     * ArrayExt.firstIndexOf(data, 'two', 2, 1);  // 1\n     * ```\n     */\n    function firstIndexOf(array, value, start = 0, stop = -1) {\n        let n = array.length;\n        if (n === 0) {\n            return -1;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        let span;\n        if (stop < start) {\n            span = stop + 1 + (n - start);\n        }\n        else {\n            span = stop - start + 1;\n        }\n        for (let i = 0; i < span; ++i) {\n            let j = (start + i) % n;\n            if (array[j] === value) {\n                return j;\n            }\n        }\n        return -1;\n    }\n    ArrayExt.firstIndexOf = firstIndexOf;\n    /**\n     * Find the index of the last occurrence of a value in an array.\n     *\n     * @param array - The array-like object to search.\n     *\n     * @param value - The value to locate in the array. Values are\n     *   compared using strict `===` equality.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The index of the last occurrence of the value, or `-1`\n     *   if the value is not found.\n     *\n     * #### Notes\n     * If `start < stop` the search will wrap at the front of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `start` or `stop` which is non-integral.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = ['one', 'two', 'three', 'four', 'one'];\n     * ArrayExt.lastIndexOf(data, 'red');        // -1\n     * ArrayExt.lastIndexOf(data, 'one');        // 4\n     * ArrayExt.lastIndexOf(data, 'one', 1);     // 0\n     * ArrayExt.lastIndexOf(data, 'two', 0);     // -1\n     * ArrayExt.lastIndexOf(data, 'two', 0, 1);  // 1\n     * ```\n     */\n    function lastIndexOf(array, value, start = -1, stop = 0) {\n        let n = array.length;\n        if (n === 0) {\n            return -1;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        let span;\n        if (start < stop) {\n            span = start + 1 + (n - stop);\n        }\n        else {\n            span = start - stop + 1;\n        }\n        for (let i = 0; i < span; ++i) {\n            let j = (start - i + n) % n;\n            if (array[j] === value) {\n                return j;\n            }\n        }\n        return -1;\n    }\n    ArrayExt.lastIndexOf = lastIndexOf;\n    /**\n     * Find the index of the first value which matches a predicate.\n     *\n     * @param array - The array-like object to search.\n     *\n     * @param fn - The predicate function to apply to the values.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The index of the first matching value, or `-1` if no\n     *   matching value is found.\n     *\n     * #### Notes\n     * If `stop < start` the search will wrap at the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `start` or `stop` which is non-integral.\n     *\n     * Modifying the length of the array while searching.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * function isEven(value: number): boolean {\n     *   return value % 2 === 0;\n     * }\n     *\n     * let data = [1, 2, 3, 4, 3, 2, 1];\n     * ArrayExt.findFirstIndex(data, isEven);       // 1\n     * ArrayExt.findFirstIndex(data, isEven, 4);    // 5\n     * ArrayExt.findFirstIndex(data, isEven, 6);    // -1\n     * ArrayExt.findFirstIndex(data, isEven, 6, 5); // 1\n     * ```\n     */\n    function findFirstIndex(array, fn, start = 0, stop = -1) {\n        let n = array.length;\n        if (n === 0) {\n            return -1;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        let span;\n        if (stop < start) {\n            span = stop + 1 + (n - start);\n        }\n        else {\n            span = stop - start + 1;\n        }\n        for (let i = 0; i < span; ++i) {\n            let j = (start + i) % n;\n            if (fn(array[j], j)) {\n                return j;\n            }\n        }\n        return -1;\n    }\n    ArrayExt.findFirstIndex = findFirstIndex;\n    /**\n     * Find the index of the last value which matches a predicate.\n     *\n     * @param array - The array-like object to search.\n     *\n     * @param fn - The predicate function to apply to the values.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The index of the last matching value, or `-1` if no\n     *   matching value is found.\n     *\n     * #### Notes\n     * If `start < stop` the search will wrap at the front of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `start` or `stop` which is non-integral.\n     *\n     * Modifying the length of the array while searching.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * function isEven(value: number): boolean {\n     *   return value % 2 === 0;\n     * }\n     *\n     * let data = [1, 2, 3, 4, 3, 2, 1];\n     * ArrayExt.findLastIndex(data, isEven);        // 5\n     * ArrayExt.findLastIndex(data, isEven, 4);     // 3\n     * ArrayExt.findLastIndex(data, isEven, 0);     // -1\n     * ArrayExt.findLastIndex(data, isEven, 0, 1);  // 5\n     * ```\n     */\n    function findLastIndex(array, fn, start = -1, stop = 0) {\n        let n = array.length;\n        if (n === 0) {\n            return -1;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        let d;\n        if (start < stop) {\n            d = start + 1 + (n - stop);\n        }\n        else {\n            d = start - stop + 1;\n        }\n        for (let i = 0; i < d; ++i) {\n            let j = (start - i + n) % n;\n            if (fn(array[j], j)) {\n                return j;\n            }\n        }\n        return -1;\n    }\n    ArrayExt.findLastIndex = findLastIndex;\n    /**\n     * Find the first value which matches a predicate.\n     *\n     * @param array - The array-like object to search.\n     *\n     * @param fn - The predicate function to apply to the values.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The first matching value, or `undefined` if no matching\n     *   value is found.\n     *\n     * #### Notes\n     * If `stop < start` the search will wrap at the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `start` or `stop` which is non-integral.\n     *\n     * Modifying the length of the array while searching.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * function isEven(value: number): boolean {\n     *   return value % 2 === 0;\n     * }\n     *\n     * let data = [1, 2, 3, 4, 3, 2, 1];\n     * ArrayExt.findFirstValue(data, isEven);       // 2\n     * ArrayExt.findFirstValue(data, isEven, 2);    // 4\n     * ArrayExt.findFirstValue(data, isEven, 6);    // undefined\n     * ArrayExt.findFirstValue(data, isEven, 6, 5); // 2\n     * ```\n     */\n    function findFirstValue(array, fn, start = 0, stop = -1) {\n        let index = findFirstIndex(array, fn, start, stop);\n        return index !== -1 ? array[index] : undefined;\n    }\n    ArrayExt.findFirstValue = findFirstValue;\n    /**\n     * Find the last value which matches a predicate.\n     *\n     * @param object - The array-like object to search.\n     *\n     * @param fn - The predicate function to apply to the values.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The last matching value, or `undefined` if no matching\n     *   value is found.\n     *\n     * #### Notes\n     * If `start < stop` the search will wrap at the front of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `start` or `stop` which is non-integral.\n     *\n     * Modifying the length of the array while searching.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * function isEven(value: number): boolean {\n     *   return value % 2 === 0;\n     * }\n     *\n     * let data = [1, 2, 3, 4, 3, 2, 1];\n     * ArrayExt.findLastValue(data, isEven);        // 2\n     * ArrayExt.findLastValue(data, isEven, 4);     // 4\n     * ArrayExt.findLastValue(data, isEven, 0);     // undefined\n     * ArrayExt.findLastValue(data, isEven, 0, 1);  // 2\n     * ```\n     */\n    function findLastValue(array, fn, start = -1, stop = 0) {\n        let index = findLastIndex(array, fn, start, stop);\n        return index !== -1 ? array[index] : undefined;\n    }\n    ArrayExt.findLastValue = findLastValue;\n    /**\n     * Find the index of the first element which compares `>=` to a value.\n     *\n     * @param array - The sorted array-like object to search.\n     *\n     * @param value - The value to locate in the array.\n     *\n     * @param fn - The 3-way comparison function to apply to the values.\n     *   It should return `< 0` if an element is less than a value, `0` if\n     *   an element is equal to a value, or `> 0` if an element is greater\n     *   than a value.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The index of the first element which compares `>=` to the\n     *   value, or `length` if there is no such element. If the computed\n     *   index for `stop` is less than `start`, then the computed index\n     *   for `start` is returned.\n     *\n     * #### Notes\n     * The array must already be sorted in ascending order according to\n     * the comparison function.\n     *\n     * #### Complexity\n     * Logarithmic.\n     *\n     * #### Undefined Behavior\n     * Searching a range which is not sorted in ascending order.\n     *\n     * A `start` or `stop` which is non-integral.\n     *\n     * Modifying the length of the array while searching.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * function numberCmp(a: number, b: number): number {\n     *   return a - b;\n     * }\n     *\n     * let data = [0, 3, 4, 7, 7, 9];\n     * ArrayExt.lowerBound(data, 0, numberCmp);   // 0\n     * ArrayExt.lowerBound(data, 6, numberCmp);   // 3\n     * ArrayExt.lowerBound(data, 7, numberCmp);   // 3\n     * ArrayExt.lowerBound(data, -1, numberCmp);  // 0\n     * ArrayExt.lowerBound(data, 10, numberCmp);  // 6\n     * ```\n     */\n    function lowerBound(array, value, fn, start = 0, stop = -1) {\n        let n = array.length;\n        if (n === 0) {\n            return 0;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        let begin = start;\n        let span = stop - start + 1;\n        while (span > 0) {\n            let half = span >> 1;\n            let middle = begin + half;\n            if (fn(array[middle], value) < 0) {\n                begin = middle + 1;\n                span -= half + 1;\n            }\n            else {\n                span = half;\n            }\n        }\n        return begin;\n    }\n    ArrayExt.lowerBound = lowerBound;\n    /**\n     * Find the index of the first element which compares `>` than a value.\n     *\n     * @param array - The sorted array-like object to search.\n     *\n     * @param value - The value to locate in the array.\n     *\n     * @param fn - The 3-way comparison function to apply to the values.\n     *   It should return `< 0` if an element is less than a value, `0` if\n     *   an element is equal to a value, or `> 0` if an element is greater\n     *   than a value.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The index of the first element which compares `>` than the\n     *   value, or `length` if there is no such element. If the computed\n     *   index for `stop` is less than `start`, then the computed index\n     *   for `start` is returned.\n     *\n     * #### Notes\n     * The array must already be sorted in ascending order according to\n     * the comparison function.\n     *\n     * #### Complexity\n     * Logarithmic.\n     *\n     * #### Undefined Behavior\n     * Searching a range which is not sorted in ascending order.\n     *\n     * A `start` or `stop` which is non-integral.\n     *\n     * Modifying the length of the array while searching.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * function numberCmp(a: number, b: number): number {\n     *   return a - b;\n     * }\n     *\n     * let data = [0, 3, 4, 7, 7, 9];\n     * ArrayExt.upperBound(data, 0, numberCmp);   // 1\n     * ArrayExt.upperBound(data, 6, numberCmp);   // 3\n     * ArrayExt.upperBound(data, 7, numberCmp);   // 5\n     * ArrayExt.upperBound(data, -1, numberCmp);  // 0\n     * ArrayExt.upperBound(data, 10, numberCmp);  // 6\n     * ```\n     */\n    function upperBound(array, value, fn, start = 0, stop = -1) {\n        let n = array.length;\n        if (n === 0) {\n            return 0;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        let begin = start;\n        let span = stop - start + 1;\n        while (span > 0) {\n            let half = span >> 1;\n            let middle = begin + half;\n            if (fn(array[middle], value) > 0) {\n                span = half;\n            }\n            else {\n                begin = middle + 1;\n                span -= half + 1;\n            }\n        }\n        return begin;\n    }\n    ArrayExt.upperBound = upperBound;\n    /**\n     * Test whether two arrays are shallowly equal.\n     *\n     * @param a - The first array-like object to compare.\n     *\n     * @param b - The second array-like object to compare.\n     *\n     * @param fn - The comparison function to apply to the elements. It\n     *   should return `true` if the elements are \"equal\". The default\n     *   compares elements using strict `===` equality.\n     *\n     * @returns Whether the two arrays are shallowly equal.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * Modifying the length of the arrays while comparing.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let d1 = [0, 3, 4, 7, 7, 9];\n     * let d2 = [0, 3, 4, 7, 7, 9];\n     * let d3 = [42];\n     * ArrayExt.shallowEqual(d1, d2);  // true\n     * ArrayExt.shallowEqual(d2, d3);  // false\n     * ```\n     */\n    function shallowEqual(a, b, fn) {\n        // Check for object identity first.\n        if (a === b) {\n            return true;\n        }\n        // Bail early if the lengths are different.\n        if (a.length !== b.length) {\n            return false;\n        }\n        // Compare each element for equality.\n        for (let i = 0, n = a.length; i < n; ++i) {\n            if (fn ? !fn(a[i], b[i]) : a[i] !== b[i]) {\n                return false;\n            }\n        }\n        // The array are shallowly equal.\n        return true;\n    }\n    ArrayExt.shallowEqual = shallowEqual;\n    /**\n     * Create a slice of an array subject to an optional step.\n     *\n     * @param array - The array-like object of interest.\n     *\n     * @param options - The options for configuring the slice.\n     *\n     * @returns A new array with the specified values.\n     *\n     * @throws An exception if the slice `step` is `0`.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `start`, `stop`, or `step` which is non-integral.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = [0, 3, 4, 7, 7, 9];\n     * ArrayExt.slice(data);                         // [0, 3, 4, 7, 7, 9]\n     * ArrayExt.slice(data, { start: 2 });           // [4, 7, 7, 9]\n     * ArrayExt.slice(data, { start: 0, stop: 4 });  // [0, 3, 4, 7]\n     * ArrayExt.slice(data, { step: 2 });            // [0, 4, 7]\n     * ArrayExt.slice(data, { step: -1 });           // [9, 7, 7, 4, 3, 0]\n     * ```\n     */\n    function slice(array, options = {}) {\n        // Extract the options.\n        let { start, stop, step } = options;\n        // Set up the `step` value.\n        if (step === undefined) {\n            step = 1;\n        }\n        // Validate the step size.\n        if (step === 0) {\n            throw new Error('Slice `step` cannot be zero.');\n        }\n        // Look up the length of the array.\n        let n = array.length;\n        // Set up the `start` value.\n        if (start === undefined) {\n            start = step < 0 ? n - 1 : 0;\n        }\n        else if (start < 0) {\n            start = Math.max(start + n, step < 0 ? -1 : 0);\n        }\n        else if (start >= n) {\n            start = step < 0 ? n - 1 : n;\n        }\n        // Set up the `stop` value.\n        if (stop === undefined) {\n            stop = step < 0 ? -1 : n;\n        }\n        else if (stop < 0) {\n            stop = Math.max(stop + n, step < 0 ? -1 : 0);\n        }\n        else if (stop >= n) {\n            stop = step < 0 ? n - 1 : n;\n        }\n        // Compute the slice length.\n        let length;\n        if ((step < 0 && stop >= start) || (step > 0 && start >= stop)) {\n            length = 0;\n        }\n        else if (step < 0) {\n            length = Math.floor((stop - start + 1) / step + 1);\n        }\n        else {\n            length = Math.floor((stop - start - 1) / step + 1);\n        }\n        // Compute the sliced result.\n        let result = [];\n        for (let i = 0; i < length; ++i) {\n            result[i] = array[start + i * step];\n        }\n        // Return the result.\n        return result;\n    }\n    ArrayExt.slice = slice;\n    /**\n     * Move an element in an array from one index to another.\n     *\n     * @param array - The mutable array-like object of interest.\n     *\n     * @param fromIndex - The index of the element to move. Negative\n     *   values are taken as an offset from the end of the array.\n     *\n     * @param toIndex - The target index of the element. Negative\n     *   values are taken as an offset from the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `fromIndex` or `toIndex` which is non-integral.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from from '@lumino/algorithm';\n     *\n     * let data = [0, 1, 2, 3, 4];\n     * ArrayExt.move(data, 1, 2);  // [0, 2, 1, 3, 4]\n     * ArrayExt.move(data, 4, 2);  // [0, 2, 4, 1, 3]\n     * ```\n     */\n    function move(array, fromIndex, toIndex) {\n        let n = array.length;\n        if (n <= 1) {\n            return;\n        }\n        if (fromIndex < 0) {\n            fromIndex = Math.max(0, fromIndex + n);\n        }\n        else {\n            fromIndex = Math.min(fromIndex, n - 1);\n        }\n        if (toIndex < 0) {\n            toIndex = Math.max(0, toIndex + n);\n        }\n        else {\n            toIndex = Math.min(toIndex, n - 1);\n        }\n        if (fromIndex === toIndex) {\n            return;\n        }\n        let value = array[fromIndex];\n        let d = fromIndex < toIndex ? 1 : -1;\n        for (let i = fromIndex; i !== toIndex; i += d) {\n            array[i] = array[i + d];\n        }\n        array[toIndex] = value;\n    }\n    ArrayExt.move = move;\n    /**\n     * Reverse an array in-place.\n     *\n     * @param array - The mutable array-like object of interest.\n     *\n     * @param start - The index of the first element in the range to be\n     *   reversed, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   reversed, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `start` or  `stop` index which is non-integral.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = [0, 1, 2, 3, 4];\n     * ArrayExt.reverse(data, 1, 3);  // [0, 3, 2, 1, 4]\n     * ArrayExt.reverse(data, 3);     // [0, 3, 2, 4, 1]\n     * ArrayExt.reverse(data);        // [1, 4, 2, 3, 0]\n     * ```\n     */\n    function reverse(array, start = 0, stop = -1) {\n        let n = array.length;\n        if (n <= 1) {\n            return;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        while (start < stop) {\n            let a = array[start];\n            let b = array[stop];\n            array[start++] = b;\n            array[stop--] = a;\n        }\n    }\n    ArrayExt.reverse = reverse;\n    /**\n     * Rotate the elements of an array in-place.\n     *\n     * @param array - The mutable array-like object of interest.\n     *\n     * @param delta - The amount of rotation to apply to the elements. A\n     *   positive value will rotate the elements to the left. A negative\n     *   value will rotate the elements to the right.\n     *\n     * @param start - The index of the first element in the range to be\n     *   rotated, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   rotated, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `delta`, `start`, or `stop` which is non-integral.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = [0, 1, 2, 3, 4];\n     * ArrayExt.rotate(data, 2);        // [2, 3, 4, 0, 1]\n     * ArrayExt.rotate(data, -2);       // [0, 1, 2, 3, 4]\n     * ArrayExt.rotate(data, 10);       // [0, 1, 2, 3, 4]\n     * ArrayExt.rotate(data, 9);        // [4, 0, 1, 2, 3]\n     * ArrayExt.rotate(data, 2, 1, 3);  // [4, 2, 0, 1, 3]\n     * ```\n     */\n    function rotate(array, delta, start = 0, stop = -1) {\n        let n = array.length;\n        if (n <= 1) {\n            return;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        if (start >= stop) {\n            return;\n        }\n        let length = stop - start + 1;\n        if (delta > 0) {\n            delta = delta % length;\n        }\n        else if (delta < 0) {\n            delta = ((delta % length) + length) % length;\n        }\n        if (delta === 0) {\n            return;\n        }\n        let pivot = start + delta;\n        reverse(array, start, pivot - 1);\n        reverse(array, pivot, stop);\n        reverse(array, start, stop);\n    }\n    ArrayExt.rotate = rotate;\n    /**\n     * Fill an array with a static value.\n     *\n     * @param array - The mutable array-like object to fill.\n     *\n     * @param value - The static value to use to fill the array.\n     *\n     * @param start - The index of the first element in the range to be\n     *   filled, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   filled, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * #### Notes\n     * If `stop < start` the fill will wrap at the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * A `start` or `stop` which is non-integral.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = ['one', 'two', 'three', 'four'];\n     * ArrayExt.fill(data, 'r');        // ['r', 'r', 'r', 'r']\n     * ArrayExt.fill(data, 'g', 1);     // ['r', 'g', 'g', 'g']\n     * ArrayExt.fill(data, 'b', 2, 3);  // ['r', 'g', 'b', 'b']\n     * ArrayExt.fill(data, 'z', 3, 1);  // ['z', 'z', 'b', 'z']\n     * ```\n     */\n    function fill(array, value, start = 0, stop = -1) {\n        let n = array.length;\n        if (n === 0) {\n            return;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        let span;\n        if (stop < start) {\n            span = stop + 1 + (n - start);\n        }\n        else {\n            span = stop - start + 1;\n        }\n        for (let i = 0; i < span; ++i) {\n            array[(start + i) % n] = value;\n        }\n    }\n    ArrayExt.fill = fill;\n    /**\n     * Insert a value into an array at a specific index.\n     *\n     * @param array - The array of interest.\n     *\n     * @param index - The index at which to insert the value. Negative\n     *   values are taken as an offset from the end of the array.\n     *\n     * @param value - The value to set at the specified index.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * An `index` which is non-integral.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = [0, 1, 2];\n     * ArrayExt.insert(data, 0, -1);  // [-1, 0, 1, 2]\n     * ArrayExt.insert(data, 2, 12);  // [-1, 0, 12, 1, 2]\n     * ArrayExt.insert(data, -1, 7);  // [-1, 0, 12, 1, 7, 2]\n     * ArrayExt.insert(data, 6, 19);  // [-1, 0, 12, 1, 7, 2, 19]\n     * ```\n     */\n    function insert(array, index, value) {\n        let n = array.length;\n        if (index < 0) {\n            index = Math.max(0, index + n);\n        }\n        else {\n            index = Math.min(index, n);\n        }\n        for (let i = n; i > index; --i) {\n            array[i] = array[i - 1];\n        }\n        array[index] = value;\n    }\n    ArrayExt.insert = insert;\n    /**\n     * Remove and return a value at a specific index in an array.\n     *\n     * @param array - The array of interest.\n     *\n     * @param index - The index of the value to remove. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The value at the specified index, or `undefined` if the\n     *   index is out of range.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Undefined Behavior\n     * An `index` which is non-integral.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = [0, 12, 23, 39, 14, 12, 75];\n     * ArrayExt.removeAt(data, 2);   // 23\n     * ArrayExt.removeAt(data, -2);  // 12\n     * ArrayExt.removeAt(data, 10);  // undefined;\n     * ```\n     */\n    function removeAt(array, index) {\n        let n = array.length;\n        if (index < 0) {\n            index += n;\n        }\n        if (index < 0 || index >= n) {\n            return undefined;\n        }\n        let value = array[index];\n        for (let i = index + 1; i < n; ++i) {\n            array[i - 1] = array[i];\n        }\n        array.length = n - 1;\n        return value;\n    }\n    ArrayExt.removeAt = removeAt;\n    /**\n     * Remove the first occurrence of a value from an array.\n     *\n     * @param array - The array of interest.\n     *\n     * @param value - The value to remove from the array. Values are\n     *   compared using strict `===` equality.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The index of the removed value, or `-1` if the value\n     *   is not contained in the array.\n     *\n     * #### Notes\n     * If `stop < start` the search will wrap at the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = [0, 12, 23, 39, 14, 12, 75];\n     * ArrayExt.removeFirstOf(data, 12);        // 1\n     * ArrayExt.removeFirstOf(data, 17);        // -1\n     * ArrayExt.removeFirstOf(data, 39, 3);     // -1\n     * ArrayExt.removeFirstOf(data, 39, 3, 2);  // 2\n     * ```\n     */\n    function removeFirstOf(array, value, start = 0, stop = -1) {\n        let index = firstIndexOf(array, value, start, stop);\n        if (index !== -1) {\n            removeAt(array, index);\n        }\n        return index;\n    }\n    ArrayExt.removeFirstOf = removeFirstOf;\n    /**\n     * Remove the last occurrence of a value from an array.\n     *\n     * @param array - The array of interest.\n     *\n     * @param value - The value to remove from the array. Values are\n     *   compared using strict `===` equality.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The index of the removed value, or `-1` if the value\n     *   is not contained in the array.\n     *\n     * #### Notes\n     * If `start < stop` the search will wrap at the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = [0, 12, 23, 39, 14, 12, 75];\n     * ArrayExt.removeLastOf(data, 12);        // 5\n     * ArrayExt.removeLastOf(data, 17);        // -1\n     * ArrayExt.removeLastOf(data, 39, 2);     // -1\n     * ArrayExt.removeLastOf(data, 39, 2, 3);  // 3\n     * ```\n     */\n    function removeLastOf(array, value, start = -1, stop = 0) {\n        let index = lastIndexOf(array, value, start, stop);\n        if (index !== -1) {\n            removeAt(array, index);\n        }\n        return index;\n    }\n    ArrayExt.removeLastOf = removeLastOf;\n    /**\n     * Remove all occurrences of a value from an array.\n     *\n     * @param array - The array of interest.\n     *\n     * @param value - The value to remove from the array. Values are\n     *   compared using strict `===` equality.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The number of elements removed from the array.\n     *\n     * #### Notes\n     * If `stop < start` the search will conceptually wrap at the end of\n     * the array, however the array will be traversed front-to-back.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * let data = [14, 12, 23, 39, 14, 12, 19, 14];\n     * ArrayExt.removeAllOf(data, 12);        // 2\n     * ArrayExt.removeAllOf(data, 17);        // 0\n     * ArrayExt.removeAllOf(data, 14, 1, 4);  // 1\n     * ```\n     */\n    function removeAllOf(array, value, start = 0, stop = -1) {\n        let n = array.length;\n        if (n === 0) {\n            return 0;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        let count = 0;\n        for (let i = 0; i < n; ++i) {\n            if (start <= stop && i >= start && i <= stop && array[i] === value) {\n                count++;\n            }\n            else if (stop < start &&\n                (i <= stop || i >= start) &&\n                array[i] === value) {\n                count++;\n            }\n            else if (count > 0) {\n                array[i - count] = array[i];\n            }\n        }\n        if (count > 0) {\n            array.length = n - count;\n        }\n        return count;\n    }\n    ArrayExt.removeAllOf = removeAllOf;\n    /**\n     * Remove the first occurrence of a value which matches a predicate.\n     *\n     * @param array - The array of interest.\n     *\n     * @param fn - The predicate function to apply to the values.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The removed `{ index, value }`, which will be `-1` and\n     *   `undefined` if the value is not contained in the array.\n     *\n     * #### Notes\n     * If `stop < start` the search will wrap at the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * function isEven(value: number): boolean {\n     *   return value % 2 === 0;\n     * }\n     *\n     * let data = [0, 12, 23, 39, 14, 12, 75];\n     * ArrayExt.removeFirstWhere(data, isEven);     // { index: 0, value: 0 }\n     * ArrayExt.removeFirstWhere(data, isEven, 2);  // { index: 3, value: 14 }\n     * ArrayExt.removeFirstWhere(data, isEven, 4);  // { index: -1, value: undefined }\n     * ```\n     */\n    function removeFirstWhere(array, fn, start = 0, stop = -1) {\n        let value;\n        let index = findFirstIndex(array, fn, start, stop);\n        if (index !== -1) {\n            value = removeAt(array, index);\n        }\n        return { index, value };\n    }\n    ArrayExt.removeFirstWhere = removeFirstWhere;\n    /**\n     * Remove the last occurrence of a value which matches a predicate.\n     *\n     * @param array - The array of interest.\n     *\n     * @param fn - The predicate function to apply to the values.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The removed `{ index, value }`, which will be `-1` and\n     *   `undefined` if the value is not contained in the array.\n     *\n     * #### Notes\n     * If `start < stop` the search will wrap at the end of the array.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * function isEven(value: number): boolean {\n     *   return value % 2 === 0;\n     * }\n     *\n     * let data = [0, 12, 23, 39, 14, 12, 75];\n     * ArrayExt.removeLastWhere(data, isEven);        // { index: 5, value: 12 }\n     * ArrayExt.removeLastWhere(data, isEven, 2);     // { index: 1, value: 12 }\n     * ArrayExt.removeLastWhere(data, isEven, 2, 1);  // { index: -1, value: undefined }\n     * ```\n     */\n    function removeLastWhere(array, fn, start = -1, stop = 0) {\n        let value;\n        let index = findLastIndex(array, fn, start, stop);\n        if (index !== -1) {\n            value = removeAt(array, index);\n        }\n        return { index, value };\n    }\n    ArrayExt.removeLastWhere = removeLastWhere;\n    /**\n     * Remove all occurrences of values which match a predicate.\n     *\n     * @param array - The array of interest.\n     *\n     * @param fn - The predicate function to apply to the values.\n     *\n     * @param start - The index of the first element in the range to be\n     *   searched, inclusive. The default value is `0`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @param stop - The index of the last element in the range to be\n     *   searched, inclusive. The default value is `-1`. Negative values\n     *   are taken as an offset from the end of the array.\n     *\n     * @returns The number of elements removed from the array.\n     *\n     * #### Notes\n     * If `stop < start` the search will conceptually wrap at the end of\n     * the array, however the array will be traversed front-to-back.\n     *\n     * #### Complexity\n     * Linear.\n     *\n     * #### Example\n     * ```typescript\n     * import { ArrayExt } from '@lumino/algorithm';\n     *\n     * function isEven(value: number): boolean {\n     *   return value % 2 === 0;\n     * }\n     *\n     * function isNegative(value: number): boolean {\n     *   return value < 0;\n     * }\n     *\n     * let data = [0, 12, -13, -9, 23, 39, 14, -15, 12, 75];\n     * ArrayExt.removeAllWhere(data, isEven);            // 4\n     * ArrayExt.removeAllWhere(data, isNegative, 0, 3);  // 2\n     * ```\n     */\n    function removeAllWhere(array, fn, start = 0, stop = -1) {\n        let n = array.length;\n        if (n === 0) {\n            return 0;\n        }\n        if (start < 0) {\n            start = Math.max(0, start + n);\n        }\n        else {\n            start = Math.min(start, n - 1);\n        }\n        if (stop < 0) {\n            stop = Math.max(0, stop + n);\n        }\n        else {\n            stop = Math.min(stop, n - 1);\n        }\n        let count = 0;\n        for (let i = 0; i < n; ++i) {\n            if (start <= stop && i >= start && i <= stop && fn(array[i], i)) {\n                count++;\n            }\n            else if (stop < start && (i <= stop || i >= start) && fn(array[i], i)) {\n                count++;\n            }\n            else if (count > 0) {\n                array[i - count] = array[i];\n            }\n        }\n        if (count > 0) {\n            array.length = n - count;\n        }\n        return count;\n    }\n    ArrayExt.removeAllWhere = removeAllWhere;\n})(ArrayExt || (ArrayExt = {}));\n\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Chain together several iterables.\n *\n * @deprecated\n *\n * @param objects - The iterable objects of interest.\n *\n * @returns An iterator which yields the values of the iterables\n *   in the order in which they are supplied.\n *\n * #### Example\n * ```typescript\n * import { chain } from '@lumino/algorithm';\n *\n * let data1 = [1, 2, 3];\n * let data2 = [4, 5, 6];\n *\n * let stream = chain(data1, data2);\n *\n * Array.from(stream);  // [1, 2, 3, 4, 5, 6]\n * ```\n */\nfunction* chain(...objects) {\n    for (const object of objects) {\n        yield* object;\n    }\n}\n\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Create an empty iterator.\n *\n * @returns A new iterator which yields nothing.\n *\n * #### Example\n * ```typescript\n * import { empty } from '@lumino/algorithm';\n *\n * let stream = empty<number>();\n *\n * Array.from(stream);  // []\n * ```\n */\n// eslint-disable-next-line require-yield\nfunction* empty() {\n    return;\n}\n\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Enumerate an iterable object.\n *\n * @param object - The iterable object of interest.\n *\n * @param start - The starting enum value. The default is `0`.\n *\n * @returns An iterator which yields the enumerated values.\n *\n * #### Example\n * ```typescript\n * import { enumerate } from '@lumino/algorithm';\n *\n * let data = ['foo', 'bar', 'baz'];\n *\n * let stream = enumerate(data, 1);\n *\n * Array.from(stream);  // [[1, 'foo'], [2, 'bar'], [3, 'baz']]\n * ```\n */\nfunction* enumerate(object, start = 0) {\n    for (const value of object) {\n        yield [start++, value];\n    }\n}\n\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Filter an iterable for values which pass a test.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns An iterator which yields the values which pass the test.\n *\n * #### Example\n * ```typescript\n * import { filter } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = filter(data, value => value % 2 === 0);\n *\n * Array.from(stream);  // [2, 4, 6]\n * ```\n */\nfunction* filter(object, fn) {\n    let index = 0;\n    for (const value of object) {\n        if (fn(value, index++)) {\n            yield value;\n        }\n    }\n}\n\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Find the first value in an iterable which matches a predicate.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The predicate function to apply to the values.\n *\n * @returns The first matching value, or `undefined` if no matching\n *   value is found.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { find } from '@lumino/algorithm';\n *\n * interface IAnimal { species: string, name: string };\n *\n * function isCat(value: IAnimal): boolean {\n *   return value.species === 'cat';\n * }\n *\n * let data: IAnimal[] = [\n *   { species: 'dog', name: 'spot' },\n *   { species: 'cat', name: 'fluffy' },\n *   { species: 'alligator', name: 'pocho' }\n * ];\n *\n * find(data, isCat).name;  // 'fluffy'\n * ```\n */\nfunction find(object, fn) {\n    let index = 0;\n    for (const value of object) {\n        if (fn(value, index++)) {\n            return value;\n        }\n    }\n    return undefined;\n}\n/**\n * Find the index of the first value which matches a predicate.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The predicate function to apply to the values.\n *\n * @returns The index of the first matching value, or `-1` if no\n *   matching value is found.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { findIndex } from '@lumino/algorithm';\n *\n * interface IAnimal { species: string, name: string };\n *\n * function isCat(value: IAnimal): boolean {\n *   return value.species === 'cat';\n * }\n *\n * let data: IAnimal[] = [\n *   { species: 'dog', name: 'spot' },\n *   { species: 'cat', name: 'fluffy' },\n *   { species: 'alligator', name: 'pocho' }\n * ];\n *\n * findIndex(data, isCat);  // 1\n * ```\n */\nfunction findIndex(object, fn) {\n    let index = 0;\n    for (const value of object) {\n        if (fn(value, index++)) {\n            return index - 1;\n        }\n    }\n    return -1;\n}\n/**\n * Find the minimum value in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns The minimum value in the iterable. If multiple values are\n *   equivalent to the minimum, the left-most value is returned. If\n *   the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { min } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * min([7, 4, 0, 3, 9, 4], numberCmp);  // 0\n * ```\n */\nfunction min(object, fn) {\n    let result = undefined;\n    for (const value of object) {\n        if (result === undefined) {\n            result = value;\n            continue;\n        }\n        if (fn(value, result) < 0) {\n            result = value;\n        }\n    }\n    return result;\n}\n/**\n * Find the maximum value in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns The maximum value in the iterable. If multiple values are\n *   equivalent to the maximum, the left-most value is returned. If\n *   the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { max } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * max([7, 4, 0, 3, 9, 4], numberCmp);  // 9\n * ```\n */\nfunction max(object, fn) {\n    let result = undefined;\n    for (const value of object) {\n        if (result === undefined) {\n            result = value;\n            continue;\n        }\n        if (fn(value, result) > 0) {\n            result = value;\n        }\n    }\n    return result;\n}\n/**\n * Find the minimum and maximum values in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns A 2-tuple of the `[min, max]` values in the iterable. If\n *   multiple values are equivalent, the left-most values are returned.\n *   If the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { minmax } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * minmax([7, 4, 0, 3, 9, 4], numberCmp);  // [0, 9]\n * ```\n */\nfunction minmax(object, fn) {\n    let empty = true;\n    let vmin;\n    let vmax;\n    for (const value of object) {\n        if (empty) {\n            vmin = value;\n            vmax = value;\n            empty = false;\n        }\n        else if (fn(value, vmin) < 0) {\n            vmin = value;\n        }\n        else if (fn(value, vmax) > 0) {\n            vmax = value;\n        }\n    }\n    return empty ? undefined : [vmin, vmax];\n}\n\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Create an array from an iterable of values.\n *\n * @deprecated\n *\n * @param object - The iterable object of interest.\n *\n * @returns A new array of values from the given object.\n *\n * #### Example\n * ```typescript\n * import { toArray } from '@lumino/algorithm';\n *\n * let stream = [1, 2, 3, 4, 5, 6][Symbol.iterator]();\n *\n * toArray(stream);  // [1, 2, 3, 4, 5, 6];\n * ```\n */\nfunction toArray(object) {\n    return Array.from(object);\n}\n/**\n * Create an object from an iterable of key/value pairs.\n *\n * @param object - The iterable object of interest.\n *\n * @returns A new object mapping keys to values.\n *\n * #### Example\n * ```typescript\n * import { toObject } from '@lumino/algorithm';\n *\n * let data: [string, number][] = [['one', 1], ['two', 2], ['three', 3]];\n *\n * toObject(data);  // { one: 1, two: 2, three: 3 }\n * ```\n */\nfunction toObject(object) {\n    const result = {};\n    for (const [key, value] of object) {\n        result[key] = value;\n    }\n    return result;\n}\n/**\n * Invoke a function for each value in an iterable.\n *\n * @deprecated\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The callback function to invoke for each value.\n *\n * #### Notes\n * Iteration can be terminated early by returning `false` from the\n * callback function.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { each } from '@lumino/algorithm';\n *\n * let data = [5, 7, 0, -2, 9];\n *\n * each(data, value => { console.log(value); });\n * ```\n */\nfunction each(object, fn) {\n    let index = 0;\n    for (const value of object) {\n        if (false === fn(value, index++)) {\n            return;\n        }\n    }\n}\n/**\n * Test whether all values in an iterable satisfy a predicate.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns `true` if all values pass the test, `false` otherwise.\n *\n * #### Notes\n * Iteration terminates on the first `false` predicate result.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { every } from '@lumino/algorithm';\n *\n * let data = [5, 7, 1];\n *\n * every(data, value => value % 2 === 0);  // false\n * every(data, value => value % 2 === 1);  // true\n * ```\n */\nfunction every(object, fn) {\n    let index = 0;\n    for (const value of object) {\n        if (false === fn(value, index++)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Test whether any value in an iterable satisfies a predicate.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns `true` if any value passes the test, `false` otherwise.\n *\n * #### Notes\n * Iteration terminates on the first `true` predicate result.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { some } from '@lumino/algorithm';\n *\n * let data = [5, 7, 1];\n *\n * some(data, value => value === 7);  // true\n * some(data, value => value === 3);  // false\n * ```\n */\nfunction some(object, fn) {\n    let index = 0;\n    for (const value of object) {\n        if (fn(value, index++)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Transform the values of an iterable with a mapping function.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The mapping function to invoke for each value.\n *\n * @returns An iterator which yields the transformed values.\n *\n * #### Example\n * ```typescript\n * import { map } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3];\n *\n * let stream = map(data, value => value * 2);\n *\n * Array.from(stream);  // [2, 4, 6]\n * ```\n */\nfunction* map(object, fn) {\n    let index = 0;\n    for (const value of object) {\n        yield fn(value, index++);\n    }\n}\n\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Create an iterator of evenly spaced values.\n *\n * @param start - The starting value for the range, inclusive.\n *\n * @param stop - The stopping value for the range, exclusive.\n *\n * @param step - The distance between each value.\n *\n * @returns An iterator which produces evenly spaced values.\n *\n * #### Notes\n * In the single argument form of `range(stop)`, `start` defaults to\n * `0` and `step` defaults to `1`.\n *\n * In the two argument form of `range(start, stop)`, `step` defaults\n * to `1`.\n *\n * #### Example\n * ```typescript\n * import { range } from '@lumino/algorithm';\n *\n * let stream = range(2, 4);\n *\n * Array.from(stream);  // [2, 3]\n * ```\n */\nfunction* range(start, stop, step) {\n    if (stop === undefined) {\n        stop = start;\n        start = 0;\n        step = 1;\n    }\n    else if (step === undefined) {\n        step = 1;\n    }\n    const length = Private.rangeLength(start, stop, step);\n    for (let index = 0; index < length; index++) {\n        yield start + step * index;\n    }\n}\n/**\n * The namespace for the module implementation details.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Compute the effective length of a range.\n     *\n     * @param start - The starting value for the range, inclusive.\n     *\n     * @param stop - The stopping value for the range, exclusive.\n     *\n     * @param step - The distance between each value.\n     *\n     * @returns The number of steps need to traverse the range.\n     */\n    function rangeLength(start, stop, step) {\n        if (step === 0) {\n            return Infinity;\n        }\n        if (start > stop && step > 0) {\n            return 0;\n        }\n        if (start < stop && step < 0) {\n            return 0;\n        }\n        return Math.ceil((stop - start) / step);\n    }\n    Private.rangeLength = rangeLength;\n})(Private || (Private = {}));\n\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nfunction reduce(object, fn, initial) {\n    // Setup the iterator and fetch the first value.\n    const it = object[Symbol.iterator]();\n    let index = 0;\n    let first = it.next();\n    // An empty iterator and no initial value is an error.\n    if (first.done && initial === undefined) {\n        throw new TypeError('Reduce of empty iterable with no initial value.');\n    }\n    // If the iterator is empty, return the initial value.\n    if (first.done) {\n        return initial;\n    }\n    // If the iterator has a single item and no initial value, the\n    // reducer is not invoked and the first item is the return value.\n    let second = it.next();\n    if (second.done && initial === undefined) {\n        return first.value;\n    }\n    // If iterator has a single item and an initial value is provided,\n    // the reducer is invoked and that result is the return value.\n    if (second.done) {\n        return fn(initial, first.value, index++);\n    }\n    // Setup the initial accumlated value.\n    let accumulator;\n    if (initial === undefined) {\n        accumulator = fn(first.value, second.value, index++);\n    }\n    else {\n        accumulator = fn(fn(initial, first.value, index++), second.value, index++);\n    }\n    // Iterate the rest of the values, updating the accumulator.\n    let next;\n    while (!(next = it.next()).done) {\n        accumulator = fn(accumulator, next.value, index++);\n    }\n    // Return the final accumulated value.\n    return accumulator;\n}\n\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Create an iterator which repeats a value a number of times.\n *\n * @deprecated\n *\n * @param value - The value to repeat.\n *\n * @param count - The number of times to repeat the value.\n *\n * @returns A new iterator which repeats the specified value.\n *\n * #### Example\n * ```typescript\n * import { repeat } from '@lumino/algorithm';\n *\n * let stream = repeat(7, 3);\n *\n * Array.from(stream);  // [7, 7, 7]\n * ```\n */\nfunction* repeat(value, count) {\n    while (0 < count--) {\n        yield value;\n    }\n}\n/**\n * Create an iterator which yields a value a single time.\n *\n * @deprecated\n *\n * @param value - The value to wrap in an iterator.\n *\n * @returns A new iterator which yields the value a single time.\n *\n * #### Example\n * ```typescript\n * import { once } from '@lumino/algorithm';\n *\n * let stream = once(7);\n *\n * Array.from(stream);  // [7]\n * ```\n */\nfunction* once(value) {\n    yield value;\n}\n\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Create an iterator for a retroable object.\n *\n * @param object - The retroable or array-like object of interest.\n *\n * @returns An iterator which traverses the object's values in reverse.\n *\n * #### Example\n * ```typescript\n * import { retro } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = retro(data);\n *\n * Array.from(stream);  // [6, 5, 4, 3, 2, 1]\n * ```\n */\nfunction* retro(object) {\n    if (typeof object.retro === 'function') {\n        yield* object.retro();\n    }\n    else {\n        for (let index = object.length - 1; index > -1; index--) {\n            yield object[index];\n        }\n    }\n}\n\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Topologically sort an iterable of edges.\n *\n * @param edges - The iterable object of edges to sort.\n *   An edge is represented as a 2-tuple of `[fromNode, toNode]`.\n *\n * @returns The topologically sorted array of nodes.\n *\n * #### Notes\n * If a cycle is present in the graph, the cycle will be ignored and\n * the return value will be only approximately sorted.\n *\n * #### Example\n * ```typescript\n * import { topologicSort } from '@lumino/algorithm';\n *\n * let data = [\n *   ['d', 'e'],\n *   ['c', 'd'],\n *   ['a', 'b'],\n *   ['b', 'c']\n * ];\n *\n * topologicSort(data);  // ['a', 'b', 'c', 'd', 'e']\n * ```\n */\nfunction topologicSort(edges) {\n    // Setup the shared sorting state.\n    let sorted = [];\n    let visited = new Set();\n    let graph = new Map();\n    // Add the edges to the graph.\n    for (const edge of edges) {\n        addEdge(edge);\n    }\n    // Visit each node in the graph.\n    for (const [k] of graph) {\n        visit(k);\n    }\n    // Return the sorted results.\n    return sorted;\n    // Add an edge to the graph.\n    function addEdge(edge) {\n        let [fromNode, toNode] = edge;\n        let children = graph.get(toNode);\n        if (children) {\n            children.push(fromNode);\n        }\n        else {\n            graph.set(toNode, [fromNode]);\n        }\n    }\n    // Recursively visit the node.\n    function visit(node) {\n        if (visited.has(node)) {\n            return;\n        }\n        visited.add(node);\n        let children = graph.get(node);\n        if (children) {\n            for (const child of children) {\n                visit(child);\n            }\n        }\n        sorted.push(node);\n    }\n}\n\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Iterate over an iterable using a stepped increment.\n *\n * @param object - The iterable object of interest.\n *\n * @param step - The distance to step on each iteration. A value\n *   of less than `1` will behave the same as a value of `1`.\n *\n * @returns An iterator which traverses the iterable step-wise.\n *\n * #### Example\n * ```typescript\n * import { stride } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = stride(data, 2);\n *\n * Array.from(stream);  // [1, 3, 5];\n * ```\n */\nfunction* stride(object, step) {\n    let count = 0;\n    for (const value of object) {\n        if (0 === count++ % step) {\n            yield value;\n        }\n    }\n}\n\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * The namespace for string-specific algorithms.\n */\nvar StringExt;\n(function (StringExt) {\n    /**\n     * Find the indices of characters in a source text.\n     *\n     * @param source - The source text which should be searched.\n     *\n     * @param query - The characters to locate in the source text.\n     *\n     * @param start - The index to start the search.\n     *\n     * @returns The matched indices, or `null` if there is no match.\n     *\n     * #### Complexity\n     * Linear on `sourceText`.\n     *\n     * #### Notes\n     * In order for there to be a match, all of the characters in `query`\n     * **must** appear in `source` in the order given by `query`.\n     *\n     * Characters are matched using strict `===` equality.\n     */\n    function findIndices(source, query, start = 0) {\n        let indices = new Array(query.length);\n        for (let i = 0, j = start, n = query.length; i < n; ++i, ++j) {\n            j = source.indexOf(query[i], j);\n            if (j === -1) {\n                return null;\n            }\n            indices[i] = j;\n        }\n        return indices;\n    }\n    StringExt.findIndices = findIndices;\n    /**\n     * A string matcher which uses a sum-of-squares algorithm.\n     *\n     * @param source - The source text which should be searched.\n     *\n     * @param query - The characters to locate in the source text.\n     *\n     * @param start - The index to start the search.\n     *\n     * @returns The match result, or `null` if there is no match.\n     *   A lower `score` represents a stronger match.\n     *\n     * #### Complexity\n     * Linear on `sourceText`.\n     *\n     * #### Notes\n     * This scoring algorithm uses a sum-of-squares approach to determine\n     * the score. In order for there to be a match, all of the characters\n     * in `query` **must** appear in `source` in order. The index of each\n     * matching character is squared and added to the score. This means\n     * that early and consecutive character matches are preferred, while\n     * late matches are heavily penalized.\n     */\n    function matchSumOfSquares(source, query, start = 0) {\n        let indices = findIndices(source, query, start);\n        if (!indices) {\n            return null;\n        }\n        let score = 0;\n        for (let i = 0, n = indices.length; i < n; ++i) {\n            let j = indices[i] - start;\n            score += j * j;\n        }\n        return { score, indices };\n    }\n    StringExt.matchSumOfSquares = matchSumOfSquares;\n    /**\n     * A string matcher which uses a sum-of-deltas algorithm.\n     *\n     * @param source - The source text which should be searched.\n     *\n     * @param query - The characters to locate in the source text.\n     *\n     * @param start - The index to start the search.\n     *\n     * @returns The match result, or `null` if there is no match.\n     *   A lower `score` represents a stronger match.\n     *\n     * #### Complexity\n     * Linear on `sourceText`.\n     *\n     * #### Notes\n     * This scoring algorithm uses a sum-of-deltas approach to determine\n     * the score. In order for there to be a match, all of the characters\n     * in `query` **must** appear in `source` in order. The delta between\n     * the indices are summed to create the score. This means that groups\n     * of matched characters are preferred, while fragmented matches are\n     * penalized.\n     */\n    function matchSumOfDeltas(source, query, start = 0) {\n        let indices = findIndices(source, query, start);\n        if (!indices) {\n            return null;\n        }\n        let score = 0;\n        let last = start - 1;\n        for (let i = 0, n = indices.length; i < n; ++i) {\n            let j = indices[i];\n            score += j - last - 1;\n            last = j;\n        }\n        return { score, indices };\n    }\n    StringExt.matchSumOfDeltas = matchSumOfDeltas;\n    /**\n     * Highlight the matched characters of a source text.\n     *\n     * @param source - The text which should be highlighted.\n     *\n     * @param indices - The indices of the matched characters. They must\n     *   appear in increasing order and must be in bounds of the source.\n     *\n     * @param fn - The function to apply to the matched chunks.\n     *\n     * @returns An array of unmatched and highlighted chunks.\n     */\n    function highlight(source, indices, fn) {\n        // Set up the result array.\n        let result = [];\n        // Set up the counter variables.\n        let k = 0;\n        let last = 0;\n        let n = indices.length;\n        // Iterator over each index.\n        while (k < n) {\n            // Set up the chunk indices.\n            let i = indices[k];\n            let j = indices[k];\n            // Advance the right chunk index until it's non-contiguous.\n            while (++k < n && indices[k] === j + 1) {\n                j++;\n            }\n            // Extract the unmatched text.\n            if (last < i) {\n                result.push(source.slice(last, i));\n            }\n            // Extract and highlight the matched text.\n            if (i < j + 1) {\n                result.push(fn(source.slice(i, j + 1)));\n            }\n            // Update the last visited index.\n            last = j + 1;\n        }\n        // Extract any remaining unmatched text.\n        if (last < source.length) {\n            result.push(source.slice(last));\n        }\n        // Return the highlighted result.\n        return result;\n    }\n    StringExt.highlight = highlight;\n    /**\n     * A 3-way string comparison function.\n     *\n     * @param a - The first string of interest.\n     *\n     * @param b - The second string of interest.\n     *\n     * @returns `-1` if `a < b`, else `1` if `a > b`, else `0`.\n     */\n    function cmp(a, b) {\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n    StringExt.cmp = cmp;\n})(StringExt || (StringExt = {}));\n\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Take a fixed number of items from an iterable.\n *\n * @param object - The iterable object of interest.\n *\n * @param count - The number of items to take from the iterable.\n *\n * @returns An iterator which yields the specified number of items\n *   from the source iterable.\n *\n * #### Notes\n * The returned iterator will exhaust early if the source iterable\n * contains an insufficient number of items.\n *\n * #### Example\n * ```typescript\n * import { take } from '@lumino/algorithm';\n *\n * let stream = take([5, 4, 3, 2, 1, 0, -1], 3);\n *\n * Array.from(stream);  // [5, 4, 3]\n * ```\n */\nfunction* take(object, count) {\n    if (count < 1) {\n        return;\n    }\n    const it = object[Symbol.iterator]();\n    let item;\n    while (0 < count-- && !(item = it.next()).done) {\n        yield item.value;\n    }\n}\n\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Iterate several iterables in lockstep.\n *\n * @param objects - The iterable objects of interest.\n *\n * @returns An iterator which yields successive tuples of values where\n *   each value is taken in turn from the provided iterables. It will\n *   be as long as the shortest provided iterable.\n *\n * #### Example\n * ```typescript\n * import { zip } from '@lumino/algorithm';\n *\n * let data1 = [1, 2, 3];\n * let data2 = [4, 5, 6];\n *\n * let stream = zip(data1, data2);\n *\n * Array.from(stream);  // [[1, 4], [2, 5], [3, 6]]\n * ```\n */\nfunction* zip(...objects) {\n    const iters = objects.map(obj => obj[Symbol.iterator]());\n    let tuple = iters.map(it => it.next());\n    for (; every(tuple, item => !item.done); tuple = iters.map(it => it.next())) {\n        yield tuple.map(item => item.value);\n    }\n}\n\nexport { ArrayExt, StringExt, chain, each, empty, enumerate, every, filter, find, findIndex, map, max, min, minmax, once, range, reduce, repeat, retro, some, stride, take, toArray, toObject, topologicSort, zip };\n//# sourceMappingURL=index.es6.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Token } from '@lumino/coreutils';\n/**\n * The editor tracker token.\n */\nexport const IEditorTracker = new Token('@jupyterlab/fileeditor:IEditorTracker', `A widget tracker for file editors.\n  Use this if you want to be able to iterate over and interact with file editors\n  created by the application.`);\n/**\n * The editor widget factory token.\n */\nexport const IEditorWidgetFactory = new Token('@jupyterlab/fileeditor:IEditorWidgetFactory', 'A factory for creating file editors.');\n//# sourceMappingURL=tokens.js.map","import { IEditorTracker } from '@jupyterlab/fileeditor';\n/**\n * 초기 확장 등록\n */\nconst extension = {\n    id: 'jupyterlab-meta-vm-extension:plugin',\n    autoStart: true,\n    requires: [IEditorTracker],\n    activate: (app, tracker) => {\n        console.log('MetaVM IR extension activated');\n        app.commands.addCommand('metavm:show-ir', {\n            label: 'Show IR Text',\n            execute: () => {\n                var _a, _b;\n                const current = tracker.currentWidget;\n                if (current) {\n                    const text = (_b = (_a = current.content.model) === null || _a === void 0 ? void 0 : _a.sharedModel.getSource()) !== null && _b !== void 0 ? _b : '';\n                    console.log('Current editor text:', text);\n                    // 여기에 IR 변환/뷰어 연동 추가 가능\n                }\n                else {\n                    console.warn('No active editor found.');\n                }\n            }\n        });\n        // JupyterLab 실행 시 자동 실행\n        app.commands.execute('metavm:show-ir');\n    }\n};\nexport default extension;\n"],"names":["root","factory","exports","module","define","amd","a","i","self","algorithm","JSONExt","isPrimitive","value","isArray","Array","deepEqual","first","second","a1","a2","length","n","deepArrayEqual","key","undefined","firstValue","secondValue","deepObjectEqual","deepCopy","result","deepArrayCopy","subvalue","deepObjectCopy","emptyObject","Object","freeze","emptyArray","isObject","Private","PluginData","constructor","plugin","_a","_b","_c","_d","this","_activated","_promise","_service","id","description","activate","deactivate","provides","autoStart","requires","slice","optional","activated","service","s","promise","p","createPluginData","ensureNoCycle","plugins","services","dependencies","visit","token","get","visited","trace","push","some","pop","ReferenceError","join","findDependents","edges","add","reduce","acc","dep","keys","newEdges","filter","edge","oldSize","previousSize","packagesOfInterest","Set","map","poi","forEach","includes","sorted","topologicSort","index","findIndex","candidate","collectStartupPlugins","options","collection","startPlugins","ignorePlugins","delete","from","fallbackRandomValues","buffer","Math","random","Random","getRandomValues","crypto","window","msCrypto","UUID","uuid4","bytes","Uint8Array","lut","toString","uuid4Factory","MimeData","_types","_values","types","hasData","mime","indexOf","getData","setData","data","clearData","splice","clear","PluginRegistry","_application","_validatePlugin","_plugins","Map","_services","validatePlugin","console","info","application","v","Error","deferredPlugins","getPluginDescription","hasPlugin","has","isPluginActivated","listPlugins","registerPlugin","TypeError","set","registerPlugins","deregisterPlugin","force","activatePlugin","required","t","resolveRequiredService","resolveOptionalService","Promise","all","then","apply","catch","error","activatePlugins","kind","promises","pluginId","async","deactivatePlugin","manifest","downstream","name","reason","PromiseDelegate","resolve","reject","_resolve","_reject","Token","_tokenStructuralPropertyT","ArrayExt","StringExt","chain","objects","object","empty","enumerate","start","fn","find","min","max","minmax","vmin","vmax","toArray","toObject","each","every","range","stop","step","rangeLength","initial","it","Symbol","iterator","next","done","accumulator","repeat","count","once","retro","graph","addEdge","k","fromNode","toNode","children","node","child","stride","take","item","zip","iters","obj","tuple","firstIndexOf","array","span","j","lastIndexOf","findFirstIndex","findLastIndex","d","reverse","b","removeAt","findFirstValue","findLastValue","lowerBound","begin","half","middle","upperBound","shallowEqual","floor","move","fromIndex","toIndex","rotate","delta","pivot","fill","insert","removeFirstOf","removeLastOf","removeAllOf","removeFirstWhere","removeLastWhere","removeAllWhere","Infinity","ceil","findIndices","source","query","indices","matchSumOfSquares","score","matchSumOfDeltas","last","highlight","cmp","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","definition","o","defineProperty","enumerable","prop","prototype","hasOwnProperty","r","toStringTag","IEditorTracker","app","tracker","log","commands","addCommand","label","execute","current","currentWidget","text","content","model","sharedModel","getSource","warn"],"sourceRoot":""}